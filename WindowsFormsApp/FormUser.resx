<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>